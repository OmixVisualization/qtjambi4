<?xml version="1.0"?>
<typesystem package="com.trolltech.qt.script" default-superclass="com.trolltech.qt.internal.QtJambiObject">
    <inject-code>
        com.trolltech.qt.Utilities.loadQtLibrary("QtCore");
        com.trolltech.qt.Utilities.loadQtLibrary("QtScript");
    </inject-code>
	<object-type name="QScriptEngine">
		<modify-function signature="QScriptEngine(QObject *)">
			<inject-code position="end">
                <argument-map index="1" meta-name="%1"/>
                if (%1 != null) disableGarbageCollection();
            </inject-code>
		</modify-function>
	</object-type>
	<object-type name="QScriptExtensionPlugin">
		<modify-function signature="QScriptExtensionPlugin(QObject *)">
			<inject-code position="end">
                <argument-map index="1" meta-name="%1"/>
                if (%1 != null) disableGarbageCollection();
            </inject-code>
		</modify-function>
	</object-type>
    <object-type name="QScriptClass">
		<modify-function signature="newIterator(const QScriptValue &amp;)">
		  <modify-argument index="return">
			<replace-type modified-type="com.trolltech.qt.script.QScriptClassPropertyIterator" />
		  </modify-argument>
		</modify-function>
		<modify-function signature="queryProperty(const QScriptValue &amp;, const QScriptString &amp;, QFlags&lt;QScriptClass::QueryFlag&gt;, uint *)" access="private">
		</modify-function>
		<inject-code>
		@QtBlockedSlot
		public com.trolltech.qt.script.QScriptClass.QueryFlags queryProperty(com.trolltech.qt.script.QScriptValue object, com.trolltech.qt.script.QScriptString name, com.trolltech.qt.script.QScriptClass.QueryFlags flags, int id)    {
			com.trolltech.qt.QNativePointer pointer = new com.trolltech.qt.QNativePointer(com.trolltech.qt.QNativePointer.Type.Int);
			pointer.setIntValue(id);
			return this.queryProperty(object, name, flags, pointer);
		}
		
		@QtBlockedSlot
		public com.trolltech.qt.script.QScriptClass.QueryFlags queryProperty(com.trolltech.qt.script.QScriptValue object, com.trolltech.qt.script.QScriptString name, com.trolltech.qt.script.QScriptClass.QueryFlags flags)    {
			return this.queryProperty(object, name, flags, (com.trolltech.qt.QNativePointer)null);
		}
		</inject-code>
    </object-type>
    <value-type name="QScriptValue">
      <modify-function signature="call(const QScriptValue &amp;, const QList&lt;QScriptValue&gt; &amp;)">
		  <modify-argument index="2">
			<replace-type modified-type="java.util.List&lt;QScriptValue&gt;" />
			<remove-default-expression />
		  </modify-argument>
      </modify-function>
      <modify-function signature="construct(const QList&lt;QScriptValue&gt; &amp;)">
		   <modify-argument index="1">
			<replace-type modified-type="java.util.List&lt;QScriptValue&gt;" />
			<remove-default-expression />
		   </modify-argument>
      </modify-function>
	  <inject-code>
	  @QtBlockedSlot
	  public final com.trolltech.qt.script.QScriptValue call(com.trolltech.qt.script.QScriptValue thisObject)    {
			return call(thisObject, new java.util.ArrayList&lt;QScriptValue&gt;());
	  }
	  
	  @QtBlockedSlot
	  public final com.trolltech.qt.script.QScriptValue construct()    {
			return construct(new java.util.ArrayList&lt;QScriptValue&gt;());
	  }
	  
	  @QtBlockedSlot
	  public final Integer toInteger() {
			if(Double.isNaN(private_toInteger())){
				return null;
			}else{
				return toInt();
			}
	  }
	  </inject-code>
  </value-type>
  <value-type name="QScriptString">
  <modify-function signature="toArrayIndex ( bool * ) const" access="private" rename="__toArrayIndex"/>
  <inject-code>
    public static class ToArrayIndexInfo {
        public ToArrayIndexInfo(boolean success, int result) {
            this.success = success;
            this.result = result;
        }

        public final boolean success;
        public final int result;
    }
	
    @QtBlockedSlot
    public final ToArrayIndexInfo toArrayIndex()  {
		com.trolltech.qt.QNativePointer pointer = new com.trolltech.qt.QNativePointer(com.trolltech.qt.QNativePointer.Type.Boolean);
		int result = __toArrayIndex(pointer);
        return new ToArrayIndexInfo(pointer.booleanValue(), result);
    }
  </inject-code>
  </value-type>
    <suppress-warning text="WARNING(CppImplGenerator) :: protected function '*' in final class '*'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: visibility of function '*' modified in class '*'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: hiding of function '*' in class '*'" />
</typesystem>
